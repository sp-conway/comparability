<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.1">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="Thank you for your patience." valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': '', 'computer_n': ''}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1440, 900]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="comp" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="info" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="0" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="choice_trial">
      <RoutineSettingsComponent name="choice_trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="choice_trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="r_1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0039, 0.0039, 0.0039" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="r_1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(r_1_x, r_1_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="w_1_tmp, h_1_tmp" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="r_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0039, 0.0039, 0.0039" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="r_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="w_2_tmp, h_2_tmp" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="r_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0039, 0.0039, 0.0039" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="r_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(w_3_tmp, h_3_tmp)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <MouseComponent name="mouse_choice" plugin="None">
        <Param val="r1, r2, r3" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse_choice" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="on click" valType="str" updates="None" name="saveMouseState"/>
        <Param val="choice," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextComponent name="r_1_label" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="5" valType="num" updates="constant" name="letterHeight"/>
        <Param val="r_1_label" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(r_1_txt_x, r_1_txt_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="1" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="r_2_label" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="5" valType="num" updates="constant" name="letterHeight"/>
        <Param val="r_2_label" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(r_2_txt_x, r_2_txt_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="2" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="r_3_label" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="5" valType="num" updates="constant" name="letterHeight"/>
        <Param val="r_3_label" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(r_3_txt_x, r_3_txt_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="3" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="prompt" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="10" valType="num" updates="constant" name="letterHeight"/>
        <Param val="prompt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(prompt_x_loc, prompt_y_loc)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Click on the rectangle with the largest area.&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="pre_trial">
      <RoutineSettingsComponent name="pre_trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="pre_trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="rect_dims" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((effect === &quot;critical&quot;)) {&amp;#10;    h_1_tmp = h_1;&amp;#10;    w_1_tmp = w_2;&amp;#10;    h_2_tmp = h_2;&amp;#10;    w_2_tmp = w_2;&amp;#10;    h_3_tmp = h_3;&amp;#10;    w_3_tmp = w_3;&amp;#10;} else {&amp;#10;    if ((effect === &quot;filler&quot;)) {&amp;#10;        h_1_tmp = np.random.uniform(dim_min, dim_max, 1);&amp;#10;        w_1_tmp = np.random.uniform(dim_min, dim_max, 1);&amp;#10;        h_2_tmp = np.random.uniform(dim_min, dim_max, 1);&amp;#10;        w_2_tmp = np.random.uniform(dim_min, dim_max, 1);&amp;#10;        h_3_tmp = np.random.uniform(dim_min, dim_max, 1);&amp;#10;        w_3_tmp = np.random.uniform(dim_min, dim_max, 1);&amp;#10;    } else {&amp;#10;        if ((effect === &quot;catch&quot;)) {&amp;#10;            u_1 = sample_diag(d3_r, d3_int);&amp;#10;            l_1 = sample_diag(d1_r, d1_int);&amp;#10;            l_2 = sample_diag(d1_r, d1_int);&amp;#10;            which_upper = np.random.choice(np.arange(3));&amp;#10;            if ((which_upper === 0)) {&amp;#10;                w_1_tmp = u_1[0];&amp;#10;                h_1_tmp = u_1[1];&amp;#10;                w_2_tmp = l_1[0];&amp;#10;                h_2_tmp = l_1[1];&amp;#10;                w_3_tmp = l_2[0];&amp;#10;                h_3_tmp = l_2[1];&amp;#10;            } else {&amp;#10;                if ((which_upper === 1)) {&amp;#10;                    w_1_tmp = l_1[0];&amp;#10;                    h_1_tmp = l_1[1];&amp;#10;                    w_2_tmp = u_1[0];&amp;#10;                    h_2_tmp = u_1[1];&amp;#10;                    w_3_tmp = l_2[0];&amp;#10;                    h_3_tmp = l_2[1];&amp;#10;                } else {&amp;#10;                    w_1_tmp = l_1[0];&amp;#10;                    h_1_tmp = l_1[1];&amp;#10;                    w_2_tmp = l_2[0];&amp;#10;                    h_2_tmp = l_2[1];&amp;#10;                    w_3_tmp = u_2[0];&amp;#10;                    h_3_tmp = u_2[1];&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if effect==&quot;critical&quot;:&amp;#10;    h_1_tmp=h_1&amp;#10;    w_1_tmp=w_2&amp;#10;    h_2_tmp=h_2&amp;#10;    w_2_tmp=w_2&amp;#10;    h_3_tmp=h_3&amp;#10;    w_3_tmp=w_3&amp;#10;elif effect==&quot;filler&quot;:&amp;#10;    h_1_tmp=np.random.uniform(dim_min,dim_max,1)&amp;#10;    w_1_tmp=np.random.uniform(dim_min,dim_max,1)&amp;#10;    h_2_tmp=np.random.uniform(dim_min,dim_max,1)&amp;#10;    w_2_tmp=np.random.uniform(dim_min,dim_max,1)&amp;#10;    h_3_tmp=np.random.uniform(dim_min,dim_max,1)&amp;#10;    w_3_tmp=np.random.uniform(dim_min,dim_max,1)&amp;#10;elif effect==&quot;catch&quot;:&amp;#10;    u_1=sample_diag(d3_r, d3_int)&amp;#10;    l_1=sample_diag(d1_r, d1_int)&amp;#10;    l_2=sample_diag(d1_r, d1_int)&amp;#10;    which_upper=np.random.choice(np.arange(3))&amp;#10;    if which_upper==0:&amp;#10;        w_1_tmp=u_1[0]&amp;#10;        h_1_tmp=u_1[1]&amp;#10;        w_2_tmp=l_1[0]&amp;#10;        h_2_tmp=l_1[1]&amp;#10;        w_3_tmp=l_2[0]&amp;#10;        h_3_tmp=l_2[1]&amp;#10;    elif which_upper==1:&amp;#10;        w_1_tmp=l_1[0]&amp;#10;        h_1_tmp=l_1[1]&amp;#10;        w_2_tmp=u_1[0]&amp;#10;        h_2_tmp=u_1[1]&amp;#10;        w_3_tmp=l_2[0]&amp;#10;        h_3_tmp=l_2[1]&amp;#10;    else:&amp;#10;        w_1_tmp=l_1[0]&amp;#10;        h_1_tmp=l_1[1]&amp;#10;        w_2_tmp=l_2[0]&amp;#10;        h_2_tmp=l_2[1]&amp;#10;        w_3_tmp=u_2[0]&amp;#10;        h_3_tmp=u_2[1]&amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="rect_dims" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="rect_locs" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((effect === &quot;critical&quot;)) {&amp;#10;    config_tmp = config;&amp;#10;} else {&amp;#10;    config_tmp = np.random.choice([1, 2.1, 2.2, 3]);&amp;#10;}&amp;#10;if ((config_tmp === 1)) {&amp;#10;    r_1_y = util.round((0 + np.random.uniform((- y_jitter), y_jitter, 1)));&amp;#10;    r_2_y = util.round((0 + np.random.uniform((- y_jitter), y_jitter, 1)));&amp;#10;    r_3_y = util.round((0 + np.random.uniform((- y_jitter), y_jitter, 1)));&amp;#10;} else {&amp;#10;    if ((config_tmp === 2.1)) {&amp;#10;        r_1_y = (- util.round(((screen_height * 0.33) + np.random.uniform((- y_jitter), y_jitter, 1))));&amp;#10;        r_2_y = (- util.round(((screen_height * 0.33) + np.random.uniform((- y_jitter), y_jitter, 1))));&amp;#10;        r_3_y = util.round(((screen_height * 0.33) + np.random.uniform((- y_jitter), y_jitter, 1)));&amp;#10;    } else {&amp;#10;        if ((config_tmp === 2.2)) {&amp;#10;            r_1_y = (- util.round(((screen_height * 0.33) + np.random.uniform((- y_jitter), y_jitter, 1))));&amp;#10;            r_2_y = util.round(((screen_height * 0.33) + np.random.uniform((- y_jitter), y_jitter, 1)));&amp;#10;            r_3_y = util.round(((screen_height * 0.33) + np.random.uniform((- y_jitter), y_jitter, 1)));&amp;#10;        } else {&amp;#10;            if ((config_tmp === 3)) {&amp;#10;                r_1_y = (- util.round(((screen_height * 0.33) + np.random.uniform((- y_jitter), y_jitter, 1))));&amp;#10;                r_2_y = util.round((0 + np.random.uniform((- y_jitter), y_jitter, 1)));&amp;#10;                r_3_y = util.round(((screen_height * 0.33) + np.random.uniform((- y_jitter), y_jitter, 1)));&amp;#10;            } else {&amp;#10;                throw new ValueError(`Unexpected config_tmp value: ${config_tmp}`);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;r_1_txt_x = r_1_x;&amp;#10;r_1_txt_y = (r_1_y + 50);&amp;#10;r_2_txt_x = r_2_x;&amp;#10;r_2_txt_y = (r_2_y + 50);&amp;#10;r_3_txt_x = r_3_x;&amp;#10;r_3_txt_y = (r_3_y + 50);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if effect == &quot;critical&quot;:&amp;#10;    config_tmp = config&amp;#10;else:&amp;#10;    config_tmp = np.random.choice([1, 2.1, 2.2, 3])&amp;#10;&amp;#10;if config_tmp == 1:&amp;#10;    r_1_y = round(0 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;    r_2_y = round(0 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;    r_3_y = round(0 + np.random.uniform(-y_jitter, y_jitter, 1))  &amp;#10;elif config_tmp == 2.1:&amp;#10;    r_1_y = -round(screen_height * .33 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;    r_2_y = -round(screen_height * .33 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;    r_3_y = round(screen_height * .33 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;elif config_tmp == 2.2:&amp;#10;    r_1_y = -round(screen_height * .33 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;    r_2_y = round(screen_height * .33 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;    r_3_y = round(screen_height * .33 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;elif config_tmp == 3:&amp;#10;    r_1_y = -round(screen_height * .33 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;    r_2_y = round(0 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;    r_3_y = round(screen_height * .33 + np.random.uniform(-y_jitter, y_jitter, 1))&amp;#10;else:&amp;#10;    raise ValueError(f&quot;Unexpected config_tmp value: {config_tmp}&quot;)&amp;#10;r_1_txt_x=r_1_x&amp;#10;r_1_txt_y=r_1_y+50&amp;#10;r_2_txt_x=r_2_x&amp;#10;r_2_txt_y=r_2_y+50&amp;#10;r_3_txt_x=r_3_x&amp;#10;r_3_txt_y=r_3_y+50" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="rect_locs" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="exp_params">
      <RoutineSettingsComponent name="exp_params" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="exp_params" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="params" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import psychopy&amp;#10;import numpy as np&amp;#10;d1_r=np.arange(57,133)&amp;#10;d2_r=np.arange(125,200)&amp;#10;dim_min = 57&amp;#10;dim_max = 200&amp;#10;screen_width=win.size[0]&amp;#10;screen_height=win.size[1]&amp;#10;screen_center_x=0&amp;#10;screen_center_y=0&amp;#10;r_1_x=-round(screen_width*.33)&amp;#10;r_2_x=0&amp;#10;r_3_x=round(screen_width*.33)&amp;#10;y_jitter=30&amp;#10;prompt_x_loc=0&amp;#10;prompt_y_loc=round(-(screen_height/2)*.75)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as psychopy from 'psychopy';&amp;#10;import * as np from 'numpy';&amp;#10;d1_r = np.arange(57, 133);&amp;#10;d2_r = np.arange(125, 200);&amp;#10;dim_min = 57;&amp;#10;dim_max = 200;&amp;#10;screen_width = psychoJS.window.size[0];&amp;#10;screen_height = psychoJS.window.size[1];&amp;#10;screen_center_x = 0;&amp;#10;screen_center_y = 0;&amp;#10;r_1_x = (- util.round((screen_width * 0.33)));&amp;#10;r_2_x = 0;&amp;#10;r_3_x = util.round((screen_width * 0.33));&amp;#10;y_jitter = 30;&amp;#10;prompt_x_loc = 0;&amp;#10;prompt_y_loc = util.round(((- (screen_height / 2)) * 0.75));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="params" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="fncs_" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="def sample_diag (d, intcpt):&amp;#10;    w=np.random.choice(d)&amp;#10;    h=intcpt-w&amp;#10;    stim=np.array([w,h])&amp;#10;    return stim" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="function sample_diag(d, intcpt) {&amp;#10;    var h, stim, w;&amp;#10;    w = np.random.choice(d);&amp;#10;    h = (intcpt - w);&amp;#10;    stim = np.array([w, h]);&amp;#10;    return stim;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="fncs_" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="exp_params"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 3.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 3.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 2.1), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 2.1), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 2.2), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 2.2), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'dhw'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 86.0), ('w_1', 86.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 157.0), ('w_1', 157.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 85.0), ('w_1', 85.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 154.0), ('w_1', 154.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 81.0), ('w_1', 81.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'dwh'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 147.0), ('w_1', 147.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 133.0), ('w_3', 57.0)]), OrderedDict([('effect', 'critical'), ('order', 'wdh'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 200.0), ('w_3', 125.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 57.0), ('w_1', 133.0), ('h_2', 133.0), ('w_2', 57.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'whd'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 125.0), ('w_1', 200.0), ('h_2', 200.0), ('w_2', 125.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 86.0), ('w_3', 86.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 157.0), ('w_3', 157.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 85.0), ('w_3', 85.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 154.0), ('w_3', 154.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 57.0), ('w_2', 133.0), ('h_3', 81.0), ('w_3', 81.0)]), OrderedDict([('effect', 'critical'), ('order', 'hwd'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 125.0), ('w_2', 200.0), ('h_3', 147.0), ('w_3', 147.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 86.0), ('w_2', 86.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 2.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 157.0), ('w_2', 157.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 85.0), ('w_2', 85.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 5.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 154.0), ('w_2', 154.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 1.0), ('diag', 'lower'), ('h_1', 133.0), ('w_1', 57.0), ('h_2', 81.0), ('w_2', 81.0), ('h_3', 57.0), ('w_3', 133.0)]), OrderedDict([('effect', 'critical'), ('order', 'hdw'), ('distance', 14.0), ('config', 1.0), ('diag', 'upper'), ('h_1', 200.0), ('w_1', 125.0), ('h_2', 147.0), ('w_2', 147.0), ('h_3', 125.0), ('w_3', 200.0)]), OrderedDict([('effect', 'catch'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'catch'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'catch'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'catch'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'catch'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)]), OrderedDict([('effect', 'filler'), ('order', None), ('distance', None), ('config', None), ('diag', None), ('h_1', None), ('w_1', None), ('h_2', None), ('w_2', None), ('h_3', None), ('w_3', None)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="trials.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="pre_trial"/>
    <Routine name="choice_trial"/>
    <LoopTerminator name="trials"/>
  </Flow>
</PsychoPy2experiment>
